version: 2
jobs:
  build:
    docker:
      # using custom image, see .circleci/images/primary/Dockerfile
      #- image: circleci/buildpack-deps:xenial@sha256:950cf9d4831257359a40ef212fd556a8bee1f49ccd028a63ef2e0b9f2e1fb1e7
      - image: circleci/buildpack-deps:xenial
    working_directory: ~/repo

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout

      - run: mkdir -p $TEST_RESULTS

      - setup_remote_docker

      - run:
          name: Start containers and verify they are working
          command: |
            set -x
            docker-compose -f ./docker-compose.yml up -d
            sleep 30

            # docker-compose will start 5 containers, the one with the coordinator will be named `coord`
            # Then we have one core AS container coreAS110, two user ASes userAS111 and userAS112 and 
            # a zookeeper instance they share.
            
            # We capture the exit codes from the userAS containers
            E111=$(docker wait userAS111)
            E112=$(docker wait userAS112)
            echo -e "Exit codes:\n\t\tuserAS111 ${E111}\n\t\tuserAS112 ${E112}"
            
            # Now we start another container with curl in the same network as `coord`, this way we have
            # all exposed ports from `coord` available on `localhost` in this new container
            docker run --net repo_as_net\
              --rm --entrypoint curl circleci/buildpack-deps:xenial --retry 5 --retry-delay 1 http://172.31.0.10:8000/user/login/
            docker-compose -f ./docker-compose.yml down
            sleep 30

      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results

