version: "2"

networks:
  as_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/16

services:
  coord:
    image:  circleci/python:3.6.1
    container_name: coord
    working_dir: /home/circleci/repo
    environment:
      PYTHONPATH: /tmp/scion/python
    volumes:
      - "/tmp/coord/:/tmp/coord/"
      - "/tmp/vi:/tmp/vi"
    networks:
      as_net:
        ipv4_address: 172.31.0.10
    # waits for setup script to be loaded
    entrypoint: /bin/bash
    command: -c "./scionlab/.circleci/setup/coord.sh"

  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    networks:
      as_net:
        ipv4_address: 172.31.0.11
    restart: always

  coreAS1301:
    image: ethznetsec/scion_base:latest
    container_name: coreAS1301
    depends_on:
      - zookeeper
      - coord
    working_dir: /home/scion/go/src/github.com/scionproto/scion
    networks:
      as_net:
        ipv4_address: ${coreAS1301IP}
    user: scion
    environment:
      PYTHONPATH: "/home/scion/go/src/github.com/scionproto/scion/python"
      GOPATH: "/home/scion/go"
      SC: "/home/scion/go/src/github.com/scionproto/scion"
      CUSER: "5"
      # fixture secret
      CSECRET: "c8CtMx5_ZUE1pAr_8sw3nw"
    tty: true
    entrypoint: /bin/bash
    command: -c "/tmp/existingAS.sh; cat;"

  infraAS1303:
    image: ethznetsec/scion_base:latest
    container_name: infraAS1303
    depends_on:
      - zookeeper
      - coreAS1301
    working_dir: /home/scion/go/src/github.com/scionproto/scion
    networks:
      as_net:
        ipv4_address: ${infraAS1303IP}
    user: scion
    environment:
      PYTHONPATH: "/home/scion/go/src/github.com/scionproto/scion/python"
      GOPATH: "/home/scion/go"
      SC: "/home/scion/go/src/github.com/scionproto/scion"
      CUSER: "7"
      # fixture secret
      CSECRET: "kuA3OhfG0eLjoMeAsoZrgQ"
    tty: true
    entrypoint: /bin/bash
    command: -c "/tmp/existingAS.sh; cat;"

  infraAS1305:
    image: ethznetsec/scion_base:latest
    container_name: infraAS1305
    depends_on:
      - zookeeper
      - coreAS1301
    working_dir: /home/scion/go/src/github.com/scionproto/scion
    networks:
      as_net:
        ipv4_address: ${infraAS1305IP}
    user: scion
    environment:
      PYTHONPATH: "/home/scion/go/src/github.com/scionproto/scion/python"
      GOPATH: "/home/scion/go"
      SC: "/home/scion/go/src/github.com/scionproto/scion"
      CUSER: "9"
      # fixture secret
      CSECRET: "jpuwJ8uzcu1mL8Rrbiw_9Q"
    tty: true
    entrypoint: /bin/bash
    command: -c "/tmp/existingAS.sh; cat;"

  coreAS1401:
    image: ethznetsec/scion_base:latest
    container_name: coreAS1401
    depends_on:
      - zookeeper
    working_dir: /home/scion/go/src/github.com/scionproto/scion
    networks:
      as_net:
        ipv4_address: ${coreAS1401IP}
    user: scion
    environment:
      PYTHONPATH: "/home/scion/go/src/github.com/scionproto/scion/python"
      GOPATH: "/home/scion/go"
      SC: "/home/scion/go/src/github.com/scionproto/scion"
      CUSER: "10"
      # fixture secret
      CSECRET: "Ch2eAP9F36OzSrrmOiTAkg"
    tty: true
    # waits for binaries and setup script to be loaded, then keeps beaconing
    entrypoint: /bin/bash
    command: -c "until [ -e /tmp/existingAS.sh ]; do sleep 1; done; /tmp/existingAS.sh; cat;"

  infraAS1405:
    image: ethznetsec/scion_base:latest
    container_name: infraAS1405
    depends_on:
      - zookeeper
      - coreAS1401
    working_dir: /home/scion/go/src/github.com/scionproto/scion
    networks:
      as_net:
        ipv4_address: ${infraAS1405IP}
    user: scion
    privileged: true
    environment:
      PYTHONPATH: "/home/scion/go/src/github.com/scionproto/scion/python"
      GOPATH: "/home/scion/go"
      SC: "/home/scion/go/src/github.com/scionproto/scion"
      CUSER: "14"
      # fixture secret
      CSECRET: "aPRjKwCAI5_eqYPXu7MlFA"
    tty: true
    # waits for binaries and setup script to be loaded, then a user AS to connect and run scmp echos
    entrypoint: /bin/bash
    command: -c "until [ -e /tmp/VPNexistingAS.sh ]; do sleep 1; done; /tmp/VPNexistingAS.sh; grep 'Successfully verified PCB' -r $${SC}/logs/; $${SC}/bin/scmp echo -c 10 -local 20-ffaa:0:1405,[127.0.0.1] -remote 20-ffaa:0:1401,[127.0.0.1]; touch $${SC}/done; sleep 120; echo 'reloading AP'; /tmp/reloadASConfig.sh; cat;"

